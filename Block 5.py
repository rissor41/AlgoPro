# Задание №1 Пользователь вводит натуральное число n. Программа в ответ выводит на экран список из n случайных целых чисел из диапазона [0; 100].
# import random

# def generate_random_numbers(n):
#     numbers = []
#     for _ in range(n): # выражение for _ in range(n) использовано для повторения генерации случайных чисел n раз.
#         number = random.randint(0, 100)
#         numbers.append(number)
#     return numbers

# # Получаем ввод от пользователя
# n = int(input("Введите натуральное число n: "))

# # Генерируем случайные числа и выводим результат
# random_numbers = generate_random_numbers(n)
# print(random_numbers)

# Задание №2 - ИСПОЛЬЗУЯ ТИП ДАННЫХ МНОЖЕСТВО СГЕНЕРИРУЙТЕ СПИСОК ИЗ 4-Х НЕПОВТОРЯЮЩИХСЯ ЦИФР (ОТ 0 ДО 9).
# import random

# def gener():
#     chislo = set()
#     while len(chislo) < 4:
#         digit = random.randint(0, 9)
#         chislo.add(digit)
#     return list(chislo)

# # Генерируем список из 4 неповторяющихся цифр
# unique_chislo = gener()
# print(unique_chislo)

#Задание №3
# Допишите программу.

# ДАН СЛОВАРЬ ОБРАЗОВ ЦИФР, СОСТАВЛЕННЫХ ПСЕВДОГРАФИКОЙ. СЛОВАРЬ ЗАПОЛНЕН ЧАСТИЧНО. ВАША ЗАДАЧА ЗАПОЛНИТЬ СЛОВАРЬ ВСЕМИ ЦИФРАМИ ОТ 0 ДО 9. Размер цифры: 3 в ширину и 5 в высоту.

# ЕСЛИ ПРОПОРЦИЯ 3 НА 5 ВАМ НЕ ПОНРАВИЛАСЬ, МОЖЕТЕ ПЕРЕДЕЛАТЬ НА СВОЮ.

# ПРОГРАММА ДОЛЖНА вывести все образы цифр в столбик.
# Эта программа почти готова - осталось только пополнить словарь.
# def print_digit(dig):
#     """функция вывода образа одной цифры"""
#     for line in dig:
#         print(line)


# digits = {  # это словарь образов цифр
#     0: ('XXX', 'X X', 'X X', 'X X', 'XXX'),
#     1: ('  X', ' XX', '  X', '  X', '  X'),
#     2: ('XXX', '  X',' X ', 'X  ', 'XXX'),
#     3: ('XXX', '  X','XX ','  X', 'XXX' ),
#     4: ('X X', 'X X', 'XXX', '  X', '  X'),
#     5: ('XXX', 'X  ','XXX', '  X', 'XXX'),
#     6: (' XX', 'X  ','XXX','X X', 'XXX'),
#     7: ('XXX', '  X', '  X', ' X ', 'X  '),
#     8: ('XXX', 'X X', 'XXX', 'X X', 'XXX'),
#     9: ('XXX', 'X X', 'XXX', '  X', 'XXX')
# }

# for i in range(len(digits)):  # цикл для вывода всех цифр словаря
#     dig = digits[i]  # найдём образ цифры
#     print_digit(dig)  # распечатаем образ цифры
#     print()  # дополнительная пустая строка


#Задание №4
# Для этой программы используйте словарь образов цифр из прошлого задания.
# Пользователь вводит с клавиатуры индекс адреса проживания - программа в ответ выводит индекс в виде образов цифр в псевдографике, например, для индекса 603012 ответ может выглядеть так:
# def print_digit(dig):
#     """Функция вывода образа одной цифры"""
#     for line in dig:
#         print(line)

# digits = {
#     0: ('XXX', 'X X', 'X X', 'X X', 'XXX'),
#     1: ('  X', ' XX', '  X', '  X', '  X'),
#     2: ('XXX', '  X',' X ', 'X  ', 'XXX'),
#     3: ('XXX', '  X','XX ','  X', 'XXX' ),
#     4: ('X X', 'X X', 'XXX', '  X', '  X'),
#     5: ('XXX', 'X  ','XXX', '  X', 'XXX'),
#     6: (' XX', 'X  ','XXX','X X', 'XXX'),
#     7: ('XXX', '  X', '  X', ' X ', 'X  '),
#     8: ('XXX', 'X X', 'XXX', 'X X', 'XXX'),
#     9: ('XXX', 'X X', 'XXX', '  X', 'XXX')
# }

# number = input("Введите число: ")

# for digit in number:
#     if digit.isdigit() and int(digit) in digits:
#         print_digit(digits[int(digit)])
#         print()
#     else:
#         print(f"Цифра {digit} отсутствует в словаре digits.")
